import type { Metadata } from 'next'
import { revalidateTag } from 'next/cache'
import { H1 } from '@components/h1'
import { PBox, PTag, PTags, PText, PTitle, SeasonBox } from '@components/post'
import { NewsInfiniteList } from './components'
import { getSeasons } from '@/services/seasons'
import { Suspense } from 'react'
import { Skeleton } from '@components/skeleton'
import { Img, ImgBox } from '@components/img'
import { CheckLink } from '@/ui/components/checkLink'
import Link from 'next/link'
import { TG_URL } from '@/const'

export const revalidate = 3600

export const metadata: Metadata = {
  title: '–ù–æ–≤–æ—Å—Ç–∏',
  description: '–í–∞–∂–Ω–µ–π—à–∏–µ –Ω–æ–≤–æ—Å—Ç–∏, –∏–∑–±–∏—Ä–∞–µ–º—ã–µ –∏–∑ —Ç–µ–ª–µ–≥—Ä–∞–º–∞ –º–∞–π–Ω–±—Ä–∏–¥–∂–∞. –ó–¥–µ—Å—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ!',
}

// todo: –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ —Å–µ–∑–æ–Ω—ã
export default async function News() {
  const seasons = await getSeasons()

  return (
    <div className='news_content'>
      <H1
        up
        reload={async () => {
          'use server'
          revalidateTag('all')
        }}
      >
        –ù–æ–≤–æ—Å—Ç–∏
      </H1>

      <PBox>
        <Link href={TG_URL}>
            <ImgBox type="post">
              <Img src='/news/tg.jpg' alt='–ù–æ–≤–æ—Å—Ç–∏' />
            </ImgBox>
          </Link>
        <PTitle>
          <h3>üå∂ –ù–æ–≤–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞ üå∂</h3>
        </PTitle>
        <PText className="whitespace-pre-line [&_*]:leading-[1.7em] [&>p]:my-0.5 [&>.blockquote]:my-0.5">
          <p>
            –°–ª–µ–¥–∏—Ç—å –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –º–æ–∂–Ω–æ –≤ –Ω–∞—à–µ–º <Link href={TG_URL} className='text-unic font-bold'>—Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª–µ</Link> üì≤
          </p>
          <p>
            –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å <Link href={TG_URL} className='text-unic font-bold'>–≤–∞–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏</Link> üí¨
          </p>
        </PText>
      </PBox>

      {/* {seasons.map(season =>
                <div key={season.number}>
                    <SeasonBox
                        number={season.number}
                        startAt={new Date(season.startAt)}
                        endAt={new Date(season.endAt)}
                    />
                </div>
            )} */}

      <Suspense fallback={<Skeleton className='h-[400px] w-[100%]' />}>
        <NewsInfiniteList />
      </Suspense>
    </div>
  )
}
