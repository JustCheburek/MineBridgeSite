@use "@styles/mixins";
@use "sass:math";

.milky_way {
  background: var(--black-color);
}

.container {
  padding-top: var(--_y);
}

.box {
  position: relative;

  display: flex;
  justify-content: center;
  align-items: center;

  margin-left: var(--_x);
}

.circle {
  display: flex;
  justify-content: center;
  align-items: center;

  width: var(--_size);
  height: var(--_size);

  z-index: var(--1z);

  @include mixins.border($background: var(--light-gray-color));

  .unic & {
    background: var(--text-color);
  }
}

.rating {
  position: absolute;
  top: 125%;
  left: 50%;
  translate: -50%;

  display: flex;
  justify-content: center;
  align-items: center;
  gap: 5px;

  filter: drop-shadow(0 0 15px var(--yellow-color));
}

.line {
  position: absolute;

  width: var(--_long);
  height: 3px;
  background: var(--light-gray-color);

  transform: rotate(var(--_angle)) translate(50%);

  &::-webkit-progress-value {
    background: var(--text-color);
    border-radius: var(--border-radius);
  }

  &::-moz-progress-bar {
    background: var(--text-color);
    border-radius: var(--border-radius);
  }
}

.gradient_gray_black {
  height: 7rem;
  background: linear-gradient(to bottom, var(--background-color), var(--black-color));
}

.card {
  position: absolute;
  bottom: 140%;

  z-index: var(--2z);
}

.text_box {
  --_width: 60rem;

  position: absolute;

  top: 50%;
  translate: 0 -50%;
  right: 0;

  display: grid;
  align-items: center;

  width: var(--_width);
  height: 16rem;

  padding: 2.5rem;

  overflow: hidden;
}

.left {
  left: 0;
}

.right {
  right: 0;
}

.text {
  position: absolute;

  width: max-content;
  translate: 0;

  @include mixins.border($background: var(--background-color));

  & {
    padding: 1rem 1.5rem;
    transition: translate var(--long-transition), opacity var(--long-transition);
  }

  .left & {
    right: calc(var(--_width) - 19rem);
    border-radius: 0 var(--border-radius) var(--border-radius) 0;
  }

  .right & {
    left: calc(var(--_width) - 19rem);
    border-radius: var(--border-radius) 0 0 var(--border-radius);
  }
}

.card:hover:has(.item:hover), .card:hover:has(.text:hover) {
  .left .text {
    translate: calc(100% - 1rem);
  }

  .right .text {
    translate: calc(-100% + 1rem);
  }
}

.item {
  border-radius: var(--border-radius);
  background: var(--black-color);
}

.img {
  object-position: center;
  object-fit: cover;

  &.blur {
    filter: blur(25px);
  }
}