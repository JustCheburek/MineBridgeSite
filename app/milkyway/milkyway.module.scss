@use '@styles/mixins';
@use 'sass:math';

.milkyway_container {
  height: 100%;
  background: linear-gradient(to bottom, var(--background-color), var(--black-color));
}

.milkyway_box {
  background: var(--black-color);
  background-image: url('stars.svg');
  background-size: 500px;
  will-change: transform;
}

.container {
  padding-top: var(--_y);
  contain: layout;
}

.box {
  position: relative;

  display: flex;
  justify-content: center;
  align-items: center;

  margin-left: var(--_x);
}

.circle,
.player {
  display: flex;
  justify-content: center;
  align-items: center;

  width: var(--_size);
  height: var(--_size);

  z-index: var(--1z);
  background: var(--light-gray-color);
  border-radius: 50%;

  .unic & {
    background: var(--text-color);
  }
}

.circle {
  filter: drop-shadow(0 0 30px var(--light-gray-color));

  .unic & {
    filter: drop-shadow(0 0 30px var(--text-color));
  }
}

.player {
  position: absolute;
  transform: rotate(var(--_angle)) translate(var(--_complete));

  width: calc(var(--_size) - 1rem);
  height: calc(var(--_size) - 1rem);
}

//noinspection CssInvalidFunction
.player_card {
  position: absolute;

  display: flex;
  flex-direction: column;
  gap: 0.5rem;

  transform: rotate(calc(-1 * var(--_angle))) translate(0, -70%);
  padding: 1rem;

  @include mixins.border($background: #101417, $color: var(--text-color), $width: 2px);
}

.rating {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 5px;

  filter: drop-shadow(0 0 30px var(--yellow-color));
}

.path_rating {
  position: absolute;
  top: 125%;
  left: 50%;
  translate: -50%;
}

.line,
.complete {
  position: absolute;

  transform: rotate(var(--_angle)) translate(50%);
}

.line {
  width: var(--_long);
  height: 3px;
  background: var(--light-gray-color);
}

.complete {
  width: var(--_complete);
  height: 7px;
  background: var(--text-color);
  border-radius: var(--border-radius);
}

.gradient_gray_black {
  height: 7rem;
  background: linear-gradient(to bottom, var(--background-color), var(--black-color));
}

.card {
  position: absolute;
  bottom: 180%;
}

.text_box {
  --_width: 70vw;

  position: absolute;

  top: 50%;
  translate: 0 -50%;
  right: 0;

  display: grid;
  align-items: center;

  width: var(--_width);
  height: 16rem;

  padding: 2.5rem;

  overflow: hidden;
}

.left {
  left: 0;

  .text {
    right: calc(var(--_width) - 19rem);
    border-radius: 0 var(--border-radius) var(--border-radius) 0;
  }
}

.right {
  right: 0;

  .text {
    left: calc(var(--_width) - 19rem);
    border-radius: var(--border-radius) 0 0 var(--border-radius);
  }
}

.text {
  position: absolute;

  padding: 0.8rem 2rem;
  translate: 0;

  @include mixins.border($background: #151b1e, $color: #a6a6a6);

  & {
    transition:
      translate var(--long-transition),
      opacity var(--long-transition);
  }
}

.heading {
  width: max-content;
  min-width: 100%;
}

@media (width > 768px) {
  .card:has(.item:hover),
  .card:has(.text:hover) {
    .left .text {
      translate: calc(100% - 1rem);
    }

    .right .text {
      translate: calc(-100% + 1rem);
    }
  }
}

@media (width < 768px) {
  .container {
    --_y: 4rem;
  }

  .box {
    margin-left: 0;
    flex-direction: column;
  }

  .card {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;

    position: static;
    margin-top: 1rem;
  }

  .text_box {
    --_width: 100%;
    position: static;
    translate: 0;
    height: auto;
    padding: 1rem;
  }

  .rating {
    top: 103%;
  }

  .left,
  .right {
    .text {
      position: static;
      translate: 0;
      border-radius: var(--border-radius);
    }
  }

  .line,
  .complete,
  .circle,
  .player {
    display: none;
  }
}
